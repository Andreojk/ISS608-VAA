{
  "hash": "d8f3180d40f3be347ecb8e6ee77cab4b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-Home_Ex01\"\nauthor: \"Andre Ong Jia Kang\"\ndate: \"May 1, 2025\"\ndate-modified: \"last-modified\"\nformat:\n  html:\n    code-fold: true\n    code-summary: \"Code\"\n---\n\n\n\n## Launching R packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, ggiraph, plotly, \n               patchwork, DT) \n\nlibrary(scales)\nlibrary(forcats)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read_csv(\"data/respopagesex2024.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 60,424\nColumns: 6\n$ PA   <chr> \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   <chr> \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  <chr> \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  <chr> \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  <dbl> 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time <dbl> 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n```\n\n\n:::\n:::\n\n\n\n::::: spgoals\n::: spgoals-header\nObservations\n:::\n\n::: spgoals-container\n-   Based on the variable and data type. The dataset consists of 6 columns and 60,424 rows. 4 Columns are Character class and 2 are Number class.\n-   PA - Planning Area, SZ - Subzone, Age - Single Year of Age, Sex - Male/Female, Pop - Resident Count, Time - Time/Period\n:::\n:::::\n\n\nBefore using the data, I want to check if there is any missing values or \n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhich(is.na(df))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ninteger(0)\n```\n\n\n:::\n\n```{.r .cell-code}\nsum(is.na(df))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\n\n## Top 10 Planning Areas by Total Population\n\nWe want to find out the top 10 planning areas which the most population.\n\n1. Summarise total Pop by PA, arrange descending, and slice top 5.\n\n2. Filter original data to those top 5 PAs and group by Sex to get sex‐specific totals.\n\n3. geom_col() to build stacked bars, ordered by total population.\n\n4. coord_flip() for horizontal labels and theme_minimal() for clarity.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# identify top 10 PAs\ntop5_pa <- df %>%\n  group_by(PA) %>%\n  summarise(TotalPop = sum(Pop), .groups = \"drop\") %>%\n  arrange(desc(TotalPop)) %>%\n  slice_head(n = 10) %>%\n  pull(PA)\n\n# prepare stacked bars by sex\np1_data <- df %>%\n  filter(PA %in% top5_pa) %>%\n  group_by(PA, Sex) %>%\n  summarise(Pop = sum(Pop), .groups = \"drop\")\n\np1 <- ggplot(p1_data, aes(x = fct_reorder(PA, Pop), y = Pop, fill = Sex)) +\n  geom_col() +\n  coord_flip() +\n  scale_y_continuous(labels = comma) +\n  labs(\n    title = \"Top 10 Planning Areas by Population (2024)\",\n    x     = \"Planning Area\",\n    y     = \"Population\",\n    fill  = \"\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\np1\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nDiscussion:\n\nThese five Planning Areas collectively house the highest resident counts. Jurong West leads, followed by Yishun, Ang Mo Kio, Woodlands, and Sengkang. In each, the male/female split is roughly even, though Jurong West and Yishun show a slight male majority—again reflecting migrant worker clusters. The differences in bar lengths emphasize varying suburban densities. Planners and infrastructure teams can use this view to prioritize resource allocation (schools, clinics) where populations are largest.\n\n\n\n## Population of male/female across the ages\n\nWe want to find compare the population of sex(male/female) across the age groups.\n\n1. Change the Age column from Character type to Numeric Type for the steps below.\n\n2. Bin ages into 10-year bands (0–9, 10–19 etc.) using mutate(Age...)\n\n3. Ensure Ages \"90 and above\" does not become \"NA\".\n\n4. Group total population by age groups and sex via group_by(AgeGroup, Sex) + summarise(Pop=sum(Pop))\n\n5. Using geom_col(position=\"dodge\"), we will plot \"side-by-side bars\" for males vs. females in each age group\n\n6. Scale_y_continuous(labels=comma) ensures human-readable axis and hrbrthemes’ theme_ipsum() and tilted x-labels for clarity.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf2 <- df %>%\n  # ensure Age is numeric\n  mutate(Age = as.numeric(Age)) %>%\n  # now bin into 10-year groups\n  mutate(\n    AgeGroup = cut(\n      Age,\n      breaks = seq(0, 100, by = 10),\n      right  = FALSE,\n      labels = paste0(seq(0, 90, by = 10), \"-\", seq(9, 99, by = 10))\n    )\n  ) %>%\n  group_by(AgeGroup, Sex) %>%\n  summarise(Pop = sum(Pop), .groups = \"drop\")\n\ndf2 <- df2 %>%\n  mutate(\n    AgeGroup = fct_explicit_na(AgeGroup, na_level = \"90 and above\")\n  )\n\np2 <- ggplot(df2, aes(x = AgeGroup, y = Pop, fill = Sex)) +\n  geom_col(position = \"dodge\") +\n  scale_y_continuous(labels = comma) +\n  labs(\n    title = \"Population by Age Group and Sex (2024)\",\n    x     = \"Age Group (years)\",\n    y     = \"Population\",\n    fill  = \"\"\n  ) +\n  theme_ipsum() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"top\"\n  )\n\np2\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n## Top 5 subzones with highest population with boxplots of the age distribution\n\n1. Summarise df to find the five SZ with highest total Pop.\n\n2. Create bar_data for a simple horizontal bar chart of those totals.\n\n3. “Uncount” df into box_data so that each unit of population becomes one row with its Age, suitable for geom_boxplot().\n\n4. Plot the bar chart (p_bar) and boxplots (p_box) with coord_flip() for readability.\n\n5. Stack them with patchwork using / to get one above the other, and add a shared title.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(hrbrthemes)\nlibrary(scales)\nlibrary(patchwork)\n\n# 1) Find & alphabetize your top 5 subzones\ntop5_sz <- df %>% \n  group_by(SZ) %>% \n  summarise(TotalPop = sum(Pop), .groups = \"drop\") %>% \n  slice_max(TotalPop, n = 5) %>% \n  pull(SZ)\n\nalpha_levels <- sort(top5_sz)\n\n# 2) Bar‐chart data (with ordered factor)\nbar_data <- df %>% \n  filter(SZ %in% top5_sz) %>% \n  group_by(SZ) %>% \n  summarise(TotalPop = sum(Pop), .groups = \"drop\") %>%\n  mutate(SZ = factor(SZ, levels = alpha_levels))\n\np_bar <- ggplot(bar_data, aes(x = SZ, y = TotalPop)) +\n  geom_col(fill = \"steelblue\") +\n  coord_flip() +\n  scale_y_continuous(labels = comma) +\n  labs(subtitle = \"Total Population – Top 5 Subzones\", x = NULL, y = \"Population\") +\n  theme_ipsum(plot_margin = margin(8, 8, 8, 8))\n\n# 3) Boxplot data (with same ordered factor)\nbox_data <- df %>% \n  filter(SZ %in% top5_sz) %>% \n  mutate(\n    Age = as.numeric(Age),\n    SZ  = factor(SZ, levels = alpha_levels)\n  ) %>% \n  select(SZ, Age, Pop) %>% \n  uncount(weights = Pop)\n\np_box <- ggplot(box_data, aes(x = SZ, y = Age, fill = SZ)) +\n  geom_boxplot(alpha = 1.5, show.legend = FALSE) +\n  coord_flip() +\n  labs(subtitle = \"Age Distribution by Subzone\", x = NULL, y = \"Age (years)\") +\n  theme_ipsum(plot_margin = margin(8, 8, 8, 8))\n\n# 4) Combine\n(p_bar / p_box) +\n  plot_annotation(\n    title   = \"Population Size & Age Distributions in Top 5 Subzones (A–Z)\",\n    caption = \"Bars = total pop; Boxes = age spread\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\nDiscussion\nThe upper panel highlights which subzones house the most people. The lower panel’s boxplots show each subzone’s age‐structure: the median (thick line), interquartile range (box), and whiskers reveal whether a subzone skews younger (tight IQR at lower ages) or older (longer tails toward high ages). For example, if Jurong East Central has a lower median and narrower box, it’s younger and more homogeneous; whereas Bishan East might show a higher median and longer whiskers, signaling more seniors. This combined view helps target age‐specific services in the busiest subzones.\n",
    "supporting": [
      "Take-Home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}