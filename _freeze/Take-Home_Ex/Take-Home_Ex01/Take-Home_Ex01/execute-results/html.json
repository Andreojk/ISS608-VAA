{
  "hash": "58d8ce507c751bdc647d75a358bd8767",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-Home_Ex01\"\nauthor: \"Andre Ong Jia Kang\"\ndate: \"May 1, 2025\"\ndate-modified: \"last-modified\"\nformat:\n  html:\n    code-fold: true\n    code-summary: \"Code\"\n---\n\n\n\n## Launching R packages\n\nLaunching R packages and libraries required.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, ggiraph, plotly, \n               patchwork, DT, dplyr, scales, forcats, dplyr, grid) \n```\n:::\n\n\n\nThe dataset \"Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024\" was obtained from Department of Statistics, Singapore.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read_csv(\"data/respopagesex2024.csv\")\n```\n:::\n\n\n\nBefore I analyse the data, I will have a preview of the dataset to find out the number of columns ad character type of it.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 60,424\nColumns: 6\n$ PA   <chr> \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   <chr> \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  <chr> \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  <chr> \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  <dbl> 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time <dbl> 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n```\n\n\n:::\n:::\n\n\n\n**Observations**\n\n-   Based on the variable and data type. The dataset consists of 6 columns and 60,424 rows. 4 Columns are Character class and 2 are Number class.\n-   For Age column, it is in Character class. I will keep it in this state first. In the plots that require transforming of the age data points, I will change it to Number class.\n-   PA - Planning Area, SZ - Subzone, Age - Single Year of Age, Sex - Male/Female, Pop - Resident Count, Time - Time/Period\n\nBefore using the data, I want to check if there is any missing values present.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhich(is.na(df))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ninteger(0)\n```\n\n\n:::\n\n```{.r .cell-code}\nsum(is.na(df))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\nBased on the result, there is no missing values or \"NA\" values. The dataset is ready for analysis.\n\n## Adding a column called \"Region\" to group the PA into the 5 Singapore Regions\n\nI want to further visualise the PA easier into the 5 Regions in Singapore. Using dplyr’s mutate() + case_when(), I will map each Planning Area (PA) into one of the five regions North, South, East, West and North-East using the following source website. (https://www.newlaunchesreview.com/regions-of-singapore/)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 3. Define the mapping and create the new column\ndf <- df %>%\n  mutate(\n    Region = case_when(\n      # Central Region (Core + Rest)\n      PA %in% c(\n        \"Downtown Core\", \"Outram\", \"Sentosa\", \"Rochor\", \"Orchard\", \"Newton\",\n        \"River Valley\", \"Bukit Timah\", \"Holland Road\", \"Tanglin\", \"Novena\",\n        \"Thomson\", \"Marina East\", \"Marina South\", \"Museum\", \"Singapore River\",\n        \"Bishan\", \"Bukit Merah\", \"Geylang\", \"Kallang\", \"Marine Parade\",\n        \"Queenstown\", \"Southern Islands\", \"Toa Payoh\", \"Straits View\"\n      ) ~ \"Central\",                                                          # :contentReference[oaicite:0]{index=0}\n\n      # North Region\n      PA %in% c(\n        \"Central Water Catchment\", \"Lim Chu Kang\", \"Mandai\", \"Sembawang\",\n        \"Simpang\", \"Sungei Kadut\", \"Woodlands\", \"Yishun\"\n      ) ~ \"North\",                                                            # :contentReference[oaicite:1]{index=1}\n\n      # North-East Region\n      PA %in% c(\n        \"Ang Mo Kio\", \"Hougang\", \"North-Eastern Islands\", \"Punggol\",\n        \"Seletar\", \"Sengkang\", \"Serangoon\"\n      ) ~ \"North-East\",                                                       # :contentReference[oaicite:2]{index=2}\n\n      # East Region\n      PA %in% c(\"Bedok\", \"Changi\", \"Changi Bay\", \"Paya Lebar\", \"Pasir Ris\", \"Tampines\"\n      ) ~ \"East\",                                                             # :contentReference[oaicite:3]{index=3}\n\n      # West Region\n      PA %in% c(\n        \"Bukit Batok\", \"Bukit Panjang\", \"Boon Lay\", \"Pioneer\", \"Choa Chu Kang\",\n        \"Clementi\", \"Jurong East\", \"Jurong West\", \"Tengah\", \"Tuas\",\n        \"Western Islands\", \"Western Water Catchment\", \"Benoi\", \"Ghim Moh\",\n        \"Gul\", \"Pandan Gardens\", \"Jurong Island\", \"Kent Ridge\", \"Nanyang\",\n        \"Teban Gardens\", \"Toh Tuck\", \"Tuas South\", \"West Coast\"\n      ) ~ \"West\",                                                             # :contentReference[oaicite:4]{index=4}\n\n      # Catch-all for any PAs that didn’t match\n      TRUE ~ NA_character_\n    )\n  )\n\n# 4. Inspect\nhead(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n  PA         SZ                     Age   Sex       Pop  Time Region    \n  <chr>      <chr>                  <chr> <chr>   <dbl> <dbl> <chr>     \n1 Ang Mo Kio Ang Mo Kio Town Centre 0     Males      10  2024 North-East\n2 Ang Mo Kio Ang Mo Kio Town Centre 0     Females    10  2024 North-East\n3 Ang Mo Kio Ang Mo Kio Town Centre 1     Males      10  2024 North-East\n4 Ang Mo Kio Ang Mo Kio Town Centre 1     Females    10  2024 North-East\n5 Ang Mo Kio Ang Mo Kio Town Centre 2     Males      10  2024 North-East\n6 Ang Mo Kio Ang Mo Kio Town Centre 2     Females    10  2024 North-East\n```\n\n\n:::\n:::\n\n\n\nI would like to check the if there are any \"NA\" values in the Region column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  summarise(na_count = sum(is.na(Region)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  na_count\n     <int>\n1        0\n```\n\n\n:::\n:::\n\n\nWith no \"NA\" values present, I will proceed with check the Population count on how many \"0\" values present for the Sum and the respective Planning Areas.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nzero_pop_pas <- df %>%\n  group_by(PA) %>%\n  summarise(TotalPop = sum(Pop, na.rm = TRUE), .groups = \"drop\") %>%\n  filter(TotalPop == 0)\n\n# View the PAs\nprint(zero_pop_pas)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 2\n   PA                      TotalPop\n   <chr>                      <dbl>\n 1 Boon Lay                       0\n 2 Central Water Catchment        0\n 3 Changi Bay                     0\n 4 Lim Chu Kang                   0\n 5 Marina East                    0\n 6 Marina South                   0\n 7 North-Eastern Islands          0\n 8 Paya Lebar                     0\n 9 Pioneer                        0\n10 Simpang                        0\n11 Straits View                   0\n12 Tuas                           0\n13 Western Islands                0\n```\n\n\n:::\n\n```{.r .cell-code}\n# If you just want a character vector of the names:\nzero_pa_names <- zero_pop_pas %>% pull(PA)\nprint(zero_pa_names)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Boon Lay\"                \"Central Water Catchment\"\n [3] \"Changi Bay\"              \"Lim Chu Kang\"           \n [5] \"Marina East\"             \"Marina South\"           \n [7] \"North-Eastern Islands\"   \"Paya Lebar\"             \n [9] \"Pioneer\"                 \"Simpang\"                \n[11] \"Straits View\"            \"Tuas\"                   \n[13] \"Western Islands\"        \n```\n\n\n:::\n:::\n\n\n## Cleaning of dataset by removing Population Sum = 0\nThere are 13 Planning Areas with Population Sum = 0 is not useful for visualization. I will remove these 13 PA's from the dataset and call the new dataset as df2.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf2 <- df %>%\n  group_by(PA) %>%\n  filter(sum(Pop, na.rm = TRUE) > 0) %>%\n  ungroup()\n```\n:::\n\n\n\n## 1) Top 5 Planning Areas by Total Population\n\nWe want to find out the top 5 planning areas which the most population.\n\n1.  Summarise total Pop by PA, arrange descending, and slice top 5.\n\n2.  Filter original data to those top 5 PAs and group by Sex to get sex‐specific totals.\n\n3.  geom_col() to build stacked bars, ordered by total population.\n\n4.  coord_flip() for horizontal labels and theme_minimal() for clarity.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# identify top 5 PAs\ntop5_pa <- df2 %>%\n  group_by(PA) %>%\n  summarise(TotalPop = sum(Pop), .groups = \"drop\") %>%\n  arrange(desc(TotalPop)) %>%\n  slice_head(n = 5) %>%\n  pull(PA)\n\n# prepare stacked bars by sex\np1_data <- df2 %>%\n  filter(PA %in% top5_pa) %>%\n  group_by(PA, Sex) %>%\n  summarise(Pop = sum(Pop), .groups = \"drop\")\n\np1 <- ggplot(p1_data, aes(x = fct_reorder(PA, Pop), y = Pop, fill = Sex)) +\n  geom_col() +\n  coord_flip() +\n  scale_y_continuous(labels = comma) +\n  labs(\n    title = \"Top 5 Planning Areas by Population (2024)\",\n    x     = \"Planning Area\",\n    y     = \"Population\",\n    fill  = \"\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\") +\n  theme(\n    plot.margin     = margin(5, 5, 5, 5),       \n    legend.key.size = unit(0.4, \"cm\"),          \n    legend.text     = element_text(size = 8),    \n    plot.title = element_text(size = 10),\n    axis.title.x = element_text(size = 8),\n    axis.title.y = element_text(size = 8)\n  )\n\n## identify bottom 5 PAs\nbottom10_pa <- df2 %>%\n  group_by(PA) %>%\n  summarise(TotalPop = sum(Pop), .groups = \"drop\") %>%\n  arrange(TotalPop) %>%\n  slice_head(n = 5) %>%\n  pull(PA)\n\n# 2. prepare stacked bars by sex\np2_data <- df2 %>%\n  filter(PA %in% bottom10_pa) %>%\n  group_by(PA, Sex) %>%\n  summarise(Pop = sum(Pop), .groups = \"drop\")\n\n# 3. plot\np2 <- ggplot(p2_data, aes(x = fct_reorder(PA, Pop), y = Pop, fill = Sex)) +\n  geom_col() +\n  coord_flip() +\n  scale_y_continuous(labels = comma) +\n  labs(\n    title = \"Bottom 5 Planning Areas by Population (2024)\",\n    x     = \"Planning Area\",\n    y     = \"Population\",\n    fill  = \"\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\") +\n  theme(\n    plot.margin     = margin(5, 5, 5, 5),\n    legend.key.size = unit(0.4, \"cm\"),\n    legend.text     = element_text(size = 8),\n    plot.title = element_text(size = 10),\n    axis.title.x = element_text(size = 8),\n    axis.title.y = element_text(size = 8)\n  )\n\n# 3a. Pie chart of Region shares\np3_data <- df2 %>% \n  group_by(Region) %>% \n  summarise(TotalPop = sum(Pop, na.rm = TRUE), .groups = \"drop\") %>% \n  mutate(Percent = TotalPop / sum(TotalPop) * 100)\n\n# 2) Draw pie chart\np3 <- ggplot(p3_data, aes(x = \"\", y = TotalPop, fill = Region)) +\n  geom_col(width = 1, color = \"white\") +\n  coord_polar(theta = \"y\") +\n  geom_text(aes(label = paste0(round(Percent, 1), \"%\")),\n            position = position_stack(vjust = 0.5), size = 2) +\n  labs(title = \"Population Percentage by Region\",\n       x = NULL, y = NULL, fill = NULL) +\n  theme_void() +\n  theme(\n      plot.title        = element_text(size = 10, margin = margin(b = 5), vjust = -25),\n      legend.position   = \"right\",\n      legend.key.size   = unit(0.4, \"cm\"),\n      legend.text       = element_text(size = 6),\n      legend.title      = element_blank(),\n      plot.margin       = margin(t = 5, r = 5, b = 5, l = 5)\n    )\n\n\ncombined <- (p1 / p2) | p3 +\n  plot_layout(widths = c(2, 1.4)) +\n  # --- ADJUSTMENT for overall ---\n  plot_annotation(theme = theme(\n    plot.margin = margin(10, 10, 10, 10)\n  ))\n\nprint(combined)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\nDiscussion:\n\nThese five Planning Areas collectively house the highest resident counts. Jurong West leads, followed by Yishun, Ang Mo Kio, Woodlands, and Sengkang. In each, the male/female split is roughly even, though Jurong West and Yishun show a slight male majority—again reflecting migrant worker clusters. The differences in bar lengths emphasize varying suburban densities. Planners and infrastructure teams can use this view to prioritize resource allocation (schools, clinics) where populations are largest.\n\n## 2) Population of male/female across the ages\n\nWe want to find compare the population of sex(male/female) across the age groups.\n\n1.  Change the Age column from Character type to Numeric Type for the steps below.\n\n2.  Bin ages into 10-year bands (0–9, 10–19 etc.) using mutate(Age...)\n\n3.  Ensure Ages \"90 and above\" does not become \"NA\".\n\n4.  Group total population by age groups and sex via group_by(AgeGroup, Sex) + summarise(Pop=sum(Pop))\n\n5.  Using geom_col(position=\"dodge\"), we will plot \"side-by-side bars\" for males vs. females in each age group\n\n6.  Scale_y_continuous(labels=comma) ensures human-readable axis and hrbrthemes’ theme_ipsum() and tilted x-labels for clarity.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf3 <- df2 %>%\n  # ensure Age is numeric\n  mutate(Age = as.numeric(Age)) %>%\n  # now bin into 10-year groups\n  mutate(\n    AgeGroup = cut(\n      Age,\n      breaks = seq(0, 100, by = 10),\n      right  = FALSE,\n      labels = paste0(seq(0, 90, by = 10), \"-\", seq(9, 99, by = 10))\n    )\n  ) %>%\n  group_by(AgeGroup, Sex) %>%\n  summarise(Pop = sum(Pop), .groups = \"drop\")\n\ndf3 <- df3 %>%\n  mutate(\n    AgeGroup = fct_explicit_na(AgeGroup, na_level = \"90 and above\")\n  )\n\np4 <- ggplot(df3, aes(x = AgeGroup, y = Pop, fill = Sex)) +\n  geom_col(position = \"dodge\") +\n  scale_y_continuous(labels = comma) +\n  labs(\n    title = \"Population by Age Group and Sex (2024)\",\n    x     = \"Age Group (years)\",\n    y     = \"Population\",\n    fill  = \"\"\n  ) +\n  theme_ipsum() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"top\"\n  )\n\np4\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n## 3) Top 5 subzones with highest population with boxplots of the age distribution\n\n1.  Summarise df to find the five SZ with highest total Pop.\n\n2.  Create bar_data for a simple horizontal bar chart of those totals.\n\n3.  “Uncount” df into box_data so that each unit of population becomes one row with its Age, suitable for geom_boxplot().\n\n4.  Plot the bar chart (p_bar) and boxplots (p_box) with coord_flip() for readability.\n\n5.  Stack them with patchwork using / to get one above the other, and add a shared title.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1) Find & alphabetize your top 4 subzones\ntop4_sz <- df2 %>%\n  filter(PA == \"Tampines\") %>%\n  group_by(SZ) %>% \n  summarise(TotalPop = sum(Pop), .groups = \"drop\") %>% \n  slice_max(TotalPop, n = 4) %>% \n  pull(SZ)\n\nalpha_levels <- sort(top4_sz)\n\n# 2) Bar‐chart data (with ordered factor)\nbar_data <- df2 %>% \n  filter(SZ %in% top4_sz) %>% \n  group_by(SZ) %>% \n  summarise(TotalPop = sum(Pop), .groups = \"drop\") %>%\n  mutate(SZ = factor(SZ, levels = alpha_levels))\n\np_bar <- ggplot(bar_data, aes(x = SZ, y = TotalPop)) +\n  geom_col(fill = \"darkorange\") +\n  coord_flip() +\n  scale_y_continuous(labels = comma) +\n  labs(subtitle = \"Total Population – Top 4 Subzones\", x = NULL, y = \"Population\") +\n  theme_ipsum(plot_margin = margin(8, 8, 8, 8))\n\n# 3) Boxplot data (with same ordered factor)\nbox_data <- df2 %>% \n  filter(SZ %in% top4_sz) %>% \n  mutate(\n    Age = as.numeric(Age),\n    SZ  = factor(SZ, levels = alpha_levels)\n  ) %>% \n  select(SZ, Age, Pop) %>% \n  uncount(weights = Pop)\n\np_box <- ggplot(box_data, aes(x = SZ, y = Age, fill = SZ)) +\n  geom_boxplot(alpha = 1.5, show.legend = FALSE) +\n  coord_flip() +\n  labs(subtitle = \"Age Distribution by Subzone\", x = NULL, y = \"Age (years)\") +\n  theme_ipsum(plot_margin = margin(8, 8, 8, 8))\n\n# 4) Combine\n(p_bar / p_box) +\n  plot_annotation(\n    title   = \"Population Size & Age Distributions in Top 4 Subzones (A–Z)\",\n    caption = \"Bars = total pop; Boxes = age spread\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\nDiscussion The upper panel highlights which subzones house the most people. The lower panel’s boxplots show each subzone’s age‐structure: the median (thick line), interquartile range (box), and whiskers reveal whether a subzone skews younger (tight IQR at lower ages) or older (longer tails toward high ages). For example, if Jurong East Central has a lower median and narrower box, it’s younger and more homogeneous; whereas Bishan East might show a higher median and longer whiskers, signaling more seniors. This combined view helps target age‐specific services in the busiest subzones.\n",
    "supporting": [
      "Take-Home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}